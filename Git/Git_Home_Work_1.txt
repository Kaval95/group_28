 JSON
 4. Создать внешний репозиторий c названием JSON. - создание репозитория с пустым тестовым файлом. Невозможно создать в Git пустую папку без файла. 
 5. Клонировать репозиторий JSON на локальный компьютер. - проверить с git fetch и после git pull
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add .
 8. Закоммитить файл - git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий. - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 
vim new.json 
{
    "name": "Vladyslav Kovalchuk",
    "age": 26,
    "home pet": 2,
    "salary": 600
}

 11. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m "add json text to new.json"
 git push
 12. Создать файл preferences.json - vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

 vim preferences.json 
{
    "movie": "Области Тьмы",
    "series": "Игра престолов",
    "food": "Морепродукты",
    "season": "Лето",
    "country": "Италия"
}

 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON.
 
vim skills.json
{
    "HTTP": "Методы, Запросы, Коды ответов",
    "XML_JSON": "Структура",
    "API": "Postman (JS, автотесты API)",
    "Charles_Fiddler": "Снифинг http web трафика",
    "iOS": "Сборка приложений на XCode",
    "SQL": "Create, Delete, Drop, Insert Into, Select, From, Where, Join"
}

 15. Отправить сразу 2 файла на внешний репозиторий.

git add preferences.json skills.json
git commit -m "add two files json - preferences/skills"
git push

 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

{
    "id": 15,
    "title": "Не отображается поле email на главной странице сайта при регистрации нового пользователя",
    "summary": {
        "steps to reproduce": "#",
        "actual result": "#",
        "expected result": "#",
        "attachment": "screenshot, video, link, log file"
    },
    "severity": "S1 - Blocker",
    "priority": "P1 - High",
    "environmen": "#",
    "build version": "#"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON

git fetch
git pull

git add preferences.json skills.json
git commit -m "Update data"
git push
  


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.

git fetch
git pull

 23. Внутри локального XML создать файл “new.xml”.

> new.xml

 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.

git add .
git commit -m "Create new folder and file xml"
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

vim new.xml

<personal_information>
    <name>Vladyslav Kovalchuk</name>
    <age>26</age>
    <home_pet>2</hone_pet>
    <salary>600</salary>
</personal_information>

 28. Отправить изменения на внешний репозиторий.

git add .
git commit -m "Create new folder and file xml"
git push

 29. Создать файл preferences.xml

> preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

vim preferences.xml

<personal_information>
    <movie>Limitless</movie>
    <series>Game of Thrones</series>
    <food>Seafood</food>
    <season>Summer</season>
    <country>Italy</country>
</personal_information> 

 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

touch skills.xml

<learning_on_the_course>
    <http>Методы, Запросы, Коды ответов</http>
    <xml_json>Структура</xml_json>
    <api>Postman - JS, автотесты API</api>
    <charles_fiddler>Снифинг http web трафика</charles_fiddler>
    <ios>Сборка приложений на XCode</ios>
    <sql>Create, Delete, Drop, Insert Into, Select, From, Where, Join</sql>
</learning_on_the_course>


 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML