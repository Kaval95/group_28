{
	"info": {
		"_postman_id": "348abf7d-08d0-4e1b-a548-6133a824ce2d",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"The correct string comes to the body\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"1_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"    let respData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)    \r",
							"pm.test(\"2_respName = Vlad\", function () {\r",
							"    pm.expect(respData.name).to.eql(\"Vlad\");\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"3_respAge = 26\", function () {\r",
							"    pm.expect(respData.age).to.eql(\"26\");\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"4_respSalary = 5000\", function () {\r",
							"    pm.expect(respData.salary).to.eql(5000);\r",
							"});\r",
							"\r",
							"// 7. Спарсить request.\r",
							"let reqData = request.data;\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"5_respName = reqName\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"6_respAge = reqAge\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"7_respSalary = reqSalary\", function () {\r",
							"    pm.expect(respData.salary).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"console.log(respData.family);\r",
							"\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"8_resp.Salary 1.5 years = req.salary*4\", function () {\r",
							"    pm.expect(respData.family.u_salary_1_5_year).to.eql(reqData.salary * 4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vlad",
							"type": "text"
						},
						{
							"key": "age",
							"value": "26",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"1_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"let respData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"2_respName = reqName\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"3_respAge = reqAge\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"4_respSalary = reqSalary\", function () {\r",
							"    pm.expect(respData.salary).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(respData.family);\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"5_dog_have_name\", function () {\r",
							"    pm.expect(respData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"6_dog_have_age\", function () {\r",
							"    pm.expect(respData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"7_dog_have_name = Luky\", function () {\r",
							"    pm.expect(respData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"8_dog_have_age = 4\", function () {\r",
							"    pm.expect(respData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vlad&age=26&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vlad"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_4\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"1_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"let respData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"2_respName = reqName\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"3_respAge = reqAge\", function () {\r",
							"    pm.expect(respData.age).to.eql(Number(reqData.age));\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"console.log(reqData.salary);\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log(respData.salary);\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(respData.salary[0]);\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(respData.salary[1]);\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(respData.salary[2]);\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"4_salary_resp[0] = salary_req\", function () {\r",
							"    pm.expect(respData.salary[0]).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"5_salary_resp[1] = salary_req*2\", function () {\r",
							"    pm.expect(respData.salary[1]).to.eql(String(reqData.salary * 2));\r",
							"});\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"6_salary_resp[2] = salary_req*3\", function () {\r",
							"    pm.expect(respData.salary[2]).to.eql(String(reqData.salary * 3));\r",
							"});\r",
							"\r",
							"// 15. Создать в окружении переменную name.\r",
							"pm.environment.set(\"name\");\r",
							"\r",
							"// 16. Создать в окружении переменную age.\r",
							"pm.environment.set(\"age\");\r",
							"\r",
							"// 17. Создать в окружении переменную salary.\r",
							"pm.environment.set(\"salary\");\r",
							"\r",
							"// 18. Передать в окружение переменную name.\r",
							"pm.environment.set(\"name\", reqData.name);\r",
							"\r",
							"// 19. Передать в окружение переменную age.\r",
							"pm.environment.set(\"age\", reqData.age);\r",
							"\r",
							"// 20. Передать в окружение переменную salary.\r",
							"pm.environment.set(\"salary\", reqData.salary);\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"for (item of respData.salary){\r",
							"    console.log(item)\r",
							"}\r",
							"\r",
							"\r",
							"// let arr = respData.salary.length;\r",
							"// // console.log(arr)\r",
							"// for (i = 0; i < arr; i++){\r",
							"//     console.log(reqData.salary[i])\r",
							"// }"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Vlad&age=26&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vlad"
						},
						{
							"key": "age",
							"value": "26"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_2\r",
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"\r",
							"pm.test(\"1_Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"let respData = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"let reqData = request.data;\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary.\r",
							"pm.test(\"2_check_start_qa_salary\", function () {\r",
							"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months.\r",
							"pm.test(\"3_check_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months.\r",
							"pm.test(\"4_check_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year.\r",
							"pm.test(\"5_check_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years.\r",
							"pm.test(\"6_check_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person.\r",
							"pm.test(\"7_check_have_person\", function () {\r",
							"    pm.expect(respData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"8_check_start_qa_salary == reqSal\", function () {\r",
							"    pm.expect(respData.start_qa_salary).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"9_check_qa_salary_after_6_monthsl == reqSal*2\", function () {\r",
							"    pm.expect(respData.qa_salary_after_6_months).to.eql(reqData.salary * 2);\r",
							"});\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"10_check_qa_salary_after_12_months == reqSal*2.7\", function () {\r",
							"    pm.expect(respData.qa_salary_after_12_months).to.eql(reqData.salary * 2.7);\r",
							"});\r",
							"\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"11_check_qa_salary_after_1.5_year == reqSal*3.3\", function () {\r",
							"    pm.expect(respData[\"qa_salary_after_1.5_year\"]).to.eql(reqData.salary * 3.3);\r",
							"});\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"12_check_qa_salary_after_3.5_years == reqSal*3.8\", function () {\r",
							"    pm.expect(respData[\"qa_salary_after_3.5_years\"]).to.eql(reqData.salary * 3.8);\r",
							"});\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"13_check_u_name == reqSal(5000)\", function () {\r",
							"    pm.expect(respData.person.u_name[1]).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"14_check_u_age == reqAge\", function () {\r",
							"    pm.expect(respData.person.u_age).to.eql(Number(reqData.age));\r",
							"});\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"15_check_u_salary_5_years == reqSal*4.2\", function () {\r",
							"    pm.expect(respData.person.u_salary_5_years).to.eql(reqData.salary * 4.2);\r",
							"});\r",
							"\r",
							"// 22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for (i in respData.person){\r",
							"    console.log(i + \" = \" + respData.person[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}